# Generated by Django 5.2.3 on 2025-06-16 01:57

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('nombre', models.CharField(max_length=150)),
                ('dni', models.CharField(blank=True, max_length=8, null=True, validators=[django.core.validators.RegexValidator(message='El DNI debe tener 8 dígitos numéricos.', regex='^\\d{8}$')])),
                ('cuil', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.RegexValidator(message='El CUIL debe tener el formato correcto (XX-XXXXXXXX-X).', regex='^\\d{2}-\\d{8}-\\d{1}$')])),
                ('tipo_usuario', models.CharField(choices=[('cliente', 'Cliente'), ('chofer_particular', 'Chofer Particular'), ('empresa', 'Empresa')], max_length=20)),
                ('documento_verificado', models.BooleanField(default=False)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='usuario_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='usuario_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_empresa', models.CharField(max_length=255)),
                ('seguro', models.CharField(max_length=255)),
                ('seguro_vigente', models.BooleanField(default=True)),
                ('calificacion', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('usuario', models.OneToOneField(limit_choices_to={'tipo_usuario': 'empresa'}, on_delete=django.db.models.deletion.CASCADE, to='registroUsuarios.usuario')),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subastas_creadas', models.IntegerField(default=0)),
                ('usuario', models.OneToOneField(limit_choices_to={'tipo_usuario': 'cliente'}, on_delete=django.db.models.deletion.CASCADE, to='registroUsuarios.usuario')),
            ],
        ),
        migrations.CreateModel(
            name='ChoferParticular',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_vehiculo', models.CharField(choices=[('auto', 'Auto'), ('van', 'Van'), ('camion', 'Camión')], max_length=20)),
                ('tiene_acoplado', models.BooleanField(default=False)),
                ('numero_patente', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='El número de patente debe seguir el formato estándar (ej. AA123BB).', regex='^[A-Z]{2}\\d{3}[A-Z]{2}$')])),
                ('marca', models.CharField(max_length=50)),
                ('modelo', models.CharField(max_length=50)),
                ('seguro', models.CharField(max_length=255)),
                ('seguro_vigente', models.BooleanField(default=True)),
                ('calificacion', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('usuario', models.OneToOneField(limit_choices_to={'tipo_usuario': 'chofer_particular'}, on_delete=django.db.models.deletion.CASCADE, to='registroUsuarios.usuario')),
            ],
        ),
    ]
